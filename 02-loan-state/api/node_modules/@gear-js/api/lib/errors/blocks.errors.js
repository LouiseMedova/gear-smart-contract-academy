"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetBlockError = void 0;
const gear_errors_1 = require("./gear.errors");
const util_1 = require("@polkadot/util");
class GetBlockError extends gear_errors_1.GearError {
    constructor(message, hash) {
        super();
        this.name = 'GetBlockError';
        const splittedMessage = message.split(':');
        if ((0, util_1.isU8a)(hash)) {
            hash = (0, util_1.u8aToString)(hash);
        }
        const errorCode = splittedMessage.length > 0 ? parseInt(splittedMessage[0]) : NaN;
        switch (errorCode) {
            case -32603:
                this.message = `State already discarded for block ${hash}`;
                break;
            default:
                this.message = 'Unknow error occurred';
                break;
        }
    }
}
exports.GetBlockError = GetBlockError;
