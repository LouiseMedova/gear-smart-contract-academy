/// <reference types="node" />
import { Metadata } from './types/interfaces';
import { ProgramId } from './types';
import { Codec } from '@polkadot/types/types';
import { GearStorage } from './Storage';
export declare class GearProgramState extends GearStorage {
    /**
     * Decode state to meta_state_output type
     * @param state - Uint8Array state representation
     * @param meta - Metadata
     * @returns decoded state
     */
    decodeState(state: Uint8Array, meta: Metadata): Codec;
    /**
     * Encode input parameters to read meta state
     * @param meta - Metadata
     * @param inputValue - input parameters
     * @returns ArrayBuffer with encoded data
     */
    encodeInput(meta: Metadata, inputValue: any): Uint8Array;
    /**
     * Read state of particular program
     * @param programId
     * @param metaWasm - file with metadata
     * @returns decoded state
     */
    read(programId: ProgramId, metaWasm: Buffer, inputValue?: any): Promise<Codec>;
}
//# sourceMappingURL=State.d.ts.map