import { CreateType } from './create-type';
import { GearApi } from './GearApi';
import { TransactionStatusCb } from './types';
import { AddressOrPair, SignerOptions, SubmittableExtrinsic } from '@polkadot/api/types';
import { ISubmittableResult } from '@polkadot/types/types';
import { Hash } from '@polkadot/types/interfaces';
export declare class GearTransaction {
    protected api: GearApi;
    protected createType: CreateType;
    submitted: SubmittableExtrinsic<'promise', ISubmittableResult>;
    constructor(gearApi: GearApi);
    signAndSend(account: AddressOrPair, callback: TransactionStatusCb): Promise<() => void>;
    signAndSend(account: AddressOrPair, options?: Partial<SignerOptions>): Promise<Hash>;
    signAndSend(account: AddressOrPair, options: Partial<SignerOptions>, callback: TransactionStatusCb): Promise<() => void>;
}
//# sourceMappingURL=Transaction.d.ts.map