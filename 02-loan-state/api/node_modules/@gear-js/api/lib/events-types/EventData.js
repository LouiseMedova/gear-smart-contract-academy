"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageDispatchedData = exports.ExecutionResult = exports.DebugData = exports.InitFailureData = exports.InitSuccessData = exports.DispatchMessageEnqueuedData = exports.InitMessageEnqueuedData = exports.TransferData = exports.LogData = exports.ProgramData = exports.MessageInfoData = exports.GearEventData = void 0;
const types_1 = require("@polkadot/types");
class GearEventData extends types_1.GenericEventData {
    constructor(data) {
        super(data.registry, data.toU8a(), data.meta, data.section, data.method);
    }
}
exports.GearEventData = GearEventData;
class MessageInfoData extends GearEventData {
    get messageId() {
        return this[0]['messageId'];
    }
    get programId() {
        return this[0]['programId'];
    }
    get origin() {
        return this[0]['origin'];
    }
}
exports.MessageInfoData = MessageInfoData;
class ProgramData extends GearEventData {
    get info() {
        return this[0];
    }
    get reason() {
        if (this.length > 1) {
            return this[1];
        }
        return null;
    }
}
exports.ProgramData = ProgramData;
class LogData extends GearEventData {
    get id() {
        return this[0]['id'];
    }
    get source() {
        return this[0]['source'];
    }
    get destination() {
        return this[0]['destination'];
    }
    get payload() {
        return this[0]['payload'];
    }
    get value() {
        return this[0]['value'];
    }
    get reply() {
        return this[0]['reply'];
    }
}
exports.LogData = LogData;
class TransferData extends GearEventData {
    get from() {
        return this[0];
    }
    get to() {
        return this[1];
    }
    get value() {
        return this[2];
    }
}
exports.TransferData = TransferData;
class InitMessageEnqueuedData extends MessageInfoData {
}
exports.InitMessageEnqueuedData = InitMessageEnqueuedData;
class DispatchMessageEnqueuedData extends MessageInfoData {
}
exports.DispatchMessageEnqueuedData = DispatchMessageEnqueuedData;
class InitSuccessData extends MessageInfoData {
}
exports.InitSuccessData = InitSuccessData;
class InitFailureData extends ProgramData {
}
exports.InitFailureData = InitFailureData;
class DebugData extends GearEventData {
    get dispatchQueue() {
        return this[0]['dispatchQueue'];
    }
    get programs() {
        return this[0]['programs'];
    }
}
exports.DebugData = DebugData;
class ExecutionResult extends types_1.Type {
    get isSuccess() {
        return this.isSuccess;
    }
    get isFailure() {
        return this.isFailure;
    }
    get asSuccess() {
        return this.asSuccess;
    }
    get asFailure() {
        return this.asFailure;
    }
}
exports.ExecutionResult = ExecutionResult;
class MessageDispatchedData extends GearEventData {
    get messageId() {
        return this[0]['messageId'];
    }
    get outcome() {
        return this[0]['outcome'];
    }
}
exports.MessageDispatchedData = MessageDispatchedData;
