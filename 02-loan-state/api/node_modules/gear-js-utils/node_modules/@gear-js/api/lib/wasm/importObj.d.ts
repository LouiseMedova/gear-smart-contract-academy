import { u64, Compact } from '@polkadot/types';
declare const _default: (memory: WebAssembly.Memory, showDebug?: boolean, inputValue?: Uint8Array, timestamp?: Compact<u64>) => {
    env: {
        abortStackOverflow: () => never;
        table: WebAssembly.Table;
        tableBase: number;
        memory: WebAssembly.Memory;
        memoryBase: number;
        STACKTOP: number;
        STACK_MAX: number;
        alloc: (pages: number) => number;
        free: () => void;
        gr_block_height: () => void;
        gr_block_timestamp: () => Compact<u64>;
        gr_exit: () => void;
        gr_gas_available: () => void;
        gr_program_id: () => void;
        gr_origin: () => void;
        gr_leave: () => void;
        gr_value_available: () => void;
        gr_wait: () => void;
        gr_wake: () => void;
        gr_exit_code: () => void;
        gr_msg_id: () => void;
        gr_read: (at: number, len: number, dest: number) => void;
        gr_reply: () => void;
        gr_reply_commit: () => void;
        gr_reply_push: () => void;
        gr_reply_to: () => void;
        gr_send: () => void;
        gr_send_wgas: () => void;
        gr_send_commit: () => void;
        gr_send_commit_wgas: () => void;
        gr_send_init: () => void;
        gr_send_push: () => void;
        gr_size: () => number;
        gr_source: () => void;
        gr_value: () => void;
        gr_create_program_wgas: () => void;
        gr_debug: (msg: string) => void;
    };
};
export default _default;
//# sourceMappingURL=importObj.d.ts.map